version: 1.2

consumerId: code


input:
  masters:
  - connection:
      address: ${MYSQL_ADDR}
      port: 3306
    scheduler: mod
    repos:
    - name: "test.*"
      entities:

      - name: news
        fields: [title, content, thumb_content, tags, affair_id, modify_time, plate_type, state, alliance_id, number, plate_sub_type]



filter:
  - method: 'public void filter(List<SyncData> list) {
               SyncData sync = list.get(0);
               sync.addExtra("suffix", "");
               switch (sync.getEntity()) {
                 case "news":
                   SyncUtil.toStr(sync, "thumb_content");
                   SyncUtil.toStr(sync, "content");
                   break;
                 case "types":
                 case "simple_type":
                   SyncUtil.toStr(sync, "text");
                   SyncUtil.unsignedByte(sync, "tinyint");
                   sync.addExtra("suffix", "-" + ((long) sync.getId())%2);
                   break;
                 case "correctness":
                   SyncUtil.unsignedByte(sync, "type");
                   break;
               }
             }'



# Special expression
# "field.*"
# "field.*.flatten"
# "extra.*"
# "extra.*.flatten"

output:

  mysql:
    connection:
      address: ${MYSQL_ADDR}
      port: 3306
      user: ${MYSQL_USER}
      password: ${MYSQL_PASS}
    rowMapping:
      schema: "repo"
      table: "entity + '_bak'"
      id: "id"
      rows:
        "fields": "fields.*.flatten"
        "id": "id"
    batch:
      size: 100
      delay: 100
      maxRetry: 5
    failureLog:
      countLimit: 1000